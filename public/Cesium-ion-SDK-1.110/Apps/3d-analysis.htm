<!DOCTYPE html>
<html lang="en">
    <head>
        <!-- Use correct character set. -->
        <meta charset="utf-8" />
        <!-- Tell IE to use the latest, best version. -->
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <!-- Make the application on mobile take up the full browser screen and disable user scaling. -->
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no"
        />
        <title>Simple Viewer</title>
        <script src="../Build/CesiumUnminified/Cesium.js"></script>
        <script src="../../viewerCesiumNavigationMixin.js"></script>
        <script src="./utils.js"></script>
        <script defer src="./viewshed-utils.js"></script>
        <style>
            @import url(../Build/CesiumUnminified/Widgets/widgets.css);
            html,
            body,
            #cesiumContainer {
                width: 100%;
                height: 100%;
                margin: 0;
                padding: 0;
                overflow: hidden;
                font-family: Helvetica;
            }

            #viewshedConfigPanel {
              z-index: 2;
              position: absolute;
              top: 20px;
              right: 20px;
              height: 50px;
              width: 50px;
              color: white;
              background-color: rgba(0,0,0,0.8);
              padding: 10px;
              border-radius: 8px;
              /* transform: translate(0, -50%); */
              display: none;
              cursor: initial;
              /* transition: all ease-in-out 0.5s; */
            }
            
            #viewshedConfigPanel #panel, #viewshedConfigPanel #panelTitle {
              display: none;
            }

            #viewshedConfigPanel #closePanel {
              display: block;
              direction: ltr;
            } 

            #viewshedConfigPanel.open #panel {
              display: block;
            } 

            #viewshedConfigPanel.open #panelTitle {
              display: flex;
              align-items: center;
              /* justify-content: space-between; */
              gap: 30px;
              width: 90%;
            }

            #viewshedConfigPanel.open {
              width: 450px;
              height: 500px;
              direction: rtl;
              /* transition: all ease-in-out 0.5s; */
            }

            #viewshedConfigPanel.open #closePanel {
              transform: unset;
              left: unset;
              top: 20px;
              left: 20px;
            }

            #viewshedConfigPanel #closePanel {
              cursor: pointer;
              position: absolute;
              top: 50%;
              left: 50%;
              transform: translate(-50%, -50%);
              padding: 0;
              margin: 0;
            }

            .cesium-button.cesium-toolbar-button.toggled {
              color: #fff;
              fill: #fff;
              background: rgba(0, 255, 0, 0.6);
              border-color: lime;
              box-shadow: 0 0 8px lime;          
            }

            .cesium-viewer-bottom, .cesium-viewer-animationContainer {
              display: none;
            }

            #toggleAdvancedFields {
              user-select: none;
              text-decoration: underline;
              color: white;
              cursor: pointer;
            }

            #viewshedConfigTable td {
              min-width: 170px;
            }

            #viewshedConfigTable input[type="number"] {
              direction: ltr;
            }

            #viewshedConfigTable .coordinatesRow td {
              min-width: 0px!important;
            }
            .toolButton {
              filter: invert(100%);
            }

            .cesium-viewer-toolbar {
              right: unset;
              left: 5px;
              direction: rtl;
            }

            .compass {
              right: unset;
              left: 0px;
            }

            .cesium-button.disabled {
              position: relative;
            }

            .cesium-button.disabled::after {
              content: '';
              position: absolute;
              z-index: 999;
              top: 0;
              left: 0;
              width: 100%;
              height: 100%;
              background-color: rgba(0,0,0,0.5);
              cursor: not-allowed;
              display: block;
            }

            .customPerspectivesContainer {
              display: inline-block;
            }

            #customPerspectiveCell {
              display: flex;
              gap: 10px;
              align-items: center;
            }



        </style>
    </head>
    <body>
        <div id="cesiumContainer">
          <template id="viewshedButtonTemplate">
            <div class="cesium-button cesium-toolbar-button toggle-viewshed-button" title="Viewshed" data-bind="css: { toggled: isViewshedModeOn },click: toggleIsViewshedModeOn">
              <img src="./viewshed.svg" alt="viewshed"/>
            </template>
          <div id="viewshedConfigPanel" data-bind="style: { display: isViewshedModeOn ? 'block' : 'none'  }, css: { open: !isPanelCollapsed, 'cesium-button cesium-toolbar-button': isPanelCollapsed }">
            <div id="panelTitle">
              <h2>שטח נצפה</h2>
              <div class="viewshedToolsContainer">
                <div data-bind="click: toggle360View, css: { toggled: is360View }" class="cesium-button cesium-toolbar-button">
                  <img class="toolButton" width="30" height="30" title="צפה ב-360°" src="./360-degrees.png" alt="toggle_360_view"/>
                </div>
                <div data-bind="click: toggleFOVVolume, css: { toggled: showLateralSurfaces }" class="cesium-button cesium-toolbar-button">
                  <img class="toolButton" width="30" height="30" title="הצג אזור לחישוב" src="./field-of-view.png" alt="toggle_show_fov_volume"/>
                </div>
              </div>
            </div>
            <p id="closePanel" data-bind="click: togglePanelCollapsed"><sup>⇱</sup><sub>⇲</sub></p>
            <div id="panel">
              <table id="viewshedConfigTable">
                <tbody>
                  <!-- <tr>
                    <td>נקודות מבט מעל הקרקע</td>
                    <td>
                      <div class="viewshedToolsContainer customPerspectivesContainer" data-bind="foreach: perspectivePresets">
                        <div data-bind="click: onClick, css: { toggled: $parent.chosenPerspective && $parent.chosenPerspective.perspective === perspective , disabled: !$parent.isAltitudeAttachedToTerrain}" class="cesium-button cesium-toolbar-button">
                          <img class="toolButton" width="30" height="30" data-bind="attr: {src: icon, title: height + ' ' + `מ'`}"/>
                        </div>
                      </div>
                    </td>
                  </tr> -->
                  <tr>
                    <td>הצמד גובה למודל</td>
                    <td id="customPerspectiveCell">
                      <input data-bind="checked: isAltitudeAttachedToTerrain" type="checkbox" name="attachHeightToModel" align="">
                      <span>לפי: </span>
                      <div class="viewshedToolsContainer customPerspectivesContainer" data-bind="foreach: perspectivePresets">
                        <div data-bind="click: onClick, css: { toggled: $parent.chosenPerspective && $parent.chosenPerspective.perspective === perspective , disabled: !$parent.isAltitudeAttachedToTerrain}" class="cesium-button cesium-toolbar-button">
                          <img class="toolButton" width="30" height="30" data-bind="attr: {src: icon, title: height + ' ' + `מ'`}"/>
                        </div>
                      </div>
                    </td>
                  </tr>
                  <tr>
                    <td>גובה לפי מודל (מ')</td>
                    <td id="altitudeSlider">
                      <input type="range" min="0.0" max="1000.0" step="0.1" data-bind="value:altitude, valueUpdate: 'input', disable: isAltitudeAttachedToTerrain" style="width: 150px">
                    </td>
                    <td>
                      <input type="number" size="5" step="1" data-bind="value: altitude, valueUpdate: 'input', disable: isAltitudeAttachedToTerrain" style="width: 80px">
                    </td>
                  </tr>
                   <tr>
                    <td>מרחק חישוב (מ')</td>
                    <td id="radiusSlider">
                      <input type="range" min="0.0" max="1000.0" step="100" data-bind="value:radius, valueUpdate: 'input'" style="width: 150px">
                    </td>
                    <td>
                      <input type="number" size="5" step="10" data-bind="value: radius, valueUpdate: 'input'" style="width: 80px">
                    </td>
                  </tr>
                  <tr>
                    <td>אזימוט°</td>
                    <td id="clockSlider">
                      <input type="range" min="0" max="360" step="0.01" data-bind="value:clock, valueUpdate: 'input', disable: is360View" style="width: 150px">
                    </td>
                    <td>
                      <input type="number" size="5" step="0.01" data-bind="value: clock, valueUpdate: 'input', disable: is360View" style="width: 80px">
                    </td>
                  </tr>
                  <tr>
                    <td>כיוון צפייה אנכי°</td>
                    <td id="coneSlider">
                      <input type="range" min="0" max="360" step="0.01" data-bind="value:cone, valueUpdate: 'input'" style="width: 150px">
                    </td>
                    <td>
                      <input type="number" size="5" step="0.01" data-bind="value: cone, valueUpdate: 'input'" style="width: 80px">
                    </td>
                  </tr>
                  <tr>
                    <td>
                      <p data-bind="click: toggleShowAdvancedFields" id="toggleAdvancedFields">
                      שימוש מתקדם 
                        <span data-bind="if: !showAdvancedFields">+</span>
                        <span data-bind="if: showAdvancedFields">-</span>
                      </p>
                    </td>
                  </tr>
                  <tr class="coordinatesRow" data-bind="if: showAdvancedFields">
                    <td>
                      נקודת אורך <input type="number" size="5" step="1" data-bind="value: longitude, valueUpdate: 'input'" style="width: 80px">
                    </td>
      
                    <td>
                      נקודת רוחב <input type="number" size="5" step="1" data-bind="value: latitude, valueUpdate: 'input'" style="width: 80px">
                    </td>
                  </tr>
                  <tr data-bind="if: showAdvancedFields">
                    <td>חצי זווית צפיה לרוחב</td>
                    <td id="xHalfAngleSlider">
                      <input type="range" min="1.0" max="90.0" step="0.1" data-bind="value:xHalfAngle, valueUpdate: 'input', disable: is360View" style="width: 150px">
                    </td>
                    <td>
                      <input type="number" size="5" step="0.1" data-bind="value: xHalfAngle, valueUpdate: 'input', disable: is360View" style="width: 80px">
                    </td>
                  </tr>
                   <tr data-bind="if: showAdvancedFields">
                    <td>חצי זווית צפיה לאורך</td>
                    <td id="yHalfAngleSlider">
                      <input type="range" min="1.0" max="90.0" step="0.1" data-bind="value:yHalfAngle, valueUpdate: 'input', disable: is360View" style="width: 150px">
                    </td>
                    <td>
                      <input type="number" size="5" step="0.1" data-bind="value: yHalfAngle, valueUpdate: 'input', disable: is360View" style="width: 80px">
                    </td>
                  </tr>
                  <!-- <tr>
                    <td>Twist</td>
                    <td id="twistSlider">
                      <input type="range" min="-3.14" max="3.14" step="0.01" data-bind="value:twist, valueUpdate: 'input'" style="width: 150px">
                    </td>
                    <td>
                      <input type="number" size="5" step="0.01" data-bind="value: twist, valueUpdate: 'input'" style="width: 80px">
                    </td>
                  </tr> -->
                  <!-- <tr>
                    <td>
                      <label for="portionMenu">Select portion to display</label>
                    </td>
                    <td colspan="2">
                      <select id="portionMenu" data-bind="options: portionOptions, value: selectedPortion"></select>
                    </td>
                  </tr> -->
                </tbody>
              </table>
              <!-- <table>
                <tbody>
                  <tr>
                    <td>Show Ellipsoid Horizon Surfaces</td>
                    <td id="ellipsoidHorizonCheckBox" colspan="2">
                      <input type="checkbox" data-bind="checked: showEllipsoidHorizonSurfaces">
                    </td>
                  </tr> 
                  <tr>
                    <td>Show Dome Surfaces</td>
                    <td id="domeCheckBox" colspan="2">
                      <input type="checkbox" data-bind="checked: showDomeSurfaces">
                    </td>
                  </tr>
                  <tr>
                    <td>Show Ellipsoid Surfaces</td>
                    <td id="ellipsoidCheckBox" colspan="2">
                      <input type="checkbox" data-bind="checked: showEllipsoidSurfaces">
                    </td>
                  </tr>
                </tbody>
              </table> -->
            </div>
        </div>
        <script>
            const MAXIMUM_SCREEN_SPACE_ERROR = 5;
            const CULL_REQUESTS_WHILE_MOVING_MULTIPLIER = 120;
            const searchParams = new URLSearchParams(window.location.search.substring(1));
            const queryModelUrl = searchParams.get("modelUrl");
           

            // ----- Viewer Config -----
            const viewer = new Cesium.Viewer("cesiumContainer", {
                // imageryProvider: false,
                navigationHelpButton: false,
                geocoder: false,
                homeButton: false,
                infoBox: false,
                sceneModePicker: false,
                timeline: false,
                navigationInstructionsInitiallyVisible: false,
                scene3DOnly: true,
                baseLayerPicker: false,
                terrain: Cesium.Terrain.fromWorldTerrain(),
            });
            viewer.extend(Cesium.viewerMeasureMixin, {
                units: new Cesium.MeasureUnits({
                    distanceUnits: Cesium.DistanceUnits.METERS,
                    areaUnits: Cesium.AreaUnits.SQUARE_METERS,
                    volumeUnits: Cesium.VolumeUnits.CUBIC_METERS
                })
            });

            viewer.extend(Cesium.viewerCesiumNavigationMixin, {
              enableZoomControls: false
            });

            
            const canvas = viewer.canvas;

            const handler = new Cesium.ScreenSpaceEventHandler(canvas);
            viewer.scene.globe.shadows = Cesium.ShadowMode.ENABLED;

            const cesiumToolbarContainer = document.querySelector('.cesium-viewer-toolbar');
            const viewshedToolButtonTemplate = document.getElementById('viewshedButtonTemplate');
            cesiumToolbarContainer.prepend(viewshedToolButtonTemplate.content.cloneNode(true));
            // ----- View Config -----

            let baseMapLayerWMTSOptions = null;
            if (searchParams.has("baseMapLayerEncoded")) {
                baseMapLayerWMTSOptions = JSON.parse(
                    window.atob(searchParams.get("baseMapLayerEncoded"))
                );
                baseMapLayerWMTSOptions.tilingScheme = new Cesium.GeographicTilingScheme();
            }
            if (searchParams.has("terrainProviderUrl")) {
                terrainProviderUrl = searchParams.get("terrainProviderUrl");
            }
             
            // handler.setInputAction((movement) => {
            //   const position = getPosition(movement, viewer);

            //   setModelValue("latitude", position.latitude);
            //   setModelValue("longitude", position.longitude);
            //   setModelValue("altitude", position.height);

            // }, Cesium.ScreenSpaceEventType.LEFT_CLICK);

            // -------------- Handle viewshed center point dragging ------------
            onCesiumObjectDrag(viewer, 'viewshedCenterPoint', (draggingMovement) => {
              const positionCartographic = getPosition({position: draggingMovement.endPosition}, viewer);

              setModelValue("latitude", positionCartographic.latitude);
              setModelValue("longitude", positionCartographic.longitude);

              if(viewModel.isAltitudeAttachedToTerrain) {
                setModelValue("altitude", positionCartographic.height);
              }
            });

            // initViewshedMode(viewer);

            /* Example! */
            Cesium.Cesium3DTileset.fromIonAssetId(40866).then((tileset) => {
                viewer.scene.primitives.add(tileset);
                viewer.zoomTo(tileset);
            });

            try {
                if (terrainProviderUrl) {
                    addTerrainProvider(viewer, terrainProviderUrl, {});
                }
                if (baseMapLayerWMTSOptions) {
                    addRasterLayer(viewer, { ...baseMapLayerWMTSOptions });
                }
                if (queryModelUrl) {
                    add3DModel(viewer, queryModelUrl, {
                        maximumScreenSpaceError: MAXIMUM_SCREEN_SPACE_ERROR,
                        cullRequestsWhileMovingMultiplier: CULL_REQUESTS_WHILE_MOVING_MULTIPLIER,
                        preloadFlightDestinations: true,
                        preferLeaves: true,
                        skipLevelOfDetail: true
                    });
                }
            } catch (e) {
                console.error(e);
            }
        </script>
    </body>
</html>
