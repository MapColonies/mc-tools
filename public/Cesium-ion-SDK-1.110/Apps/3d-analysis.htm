<!DOCTYPE html>
<html lang="en">
    <head>
        <!-- Use correct character set. -->
        <meta charset="utf-8" />
        <!-- Tell IE to use the latest, best version. -->
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <!-- Make the application on mobile take up the full browser screen and disable user scaling. -->
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no"
        />
        <title>3D Analysis</title>
        <script src="../../assets/scripts/polyfill.globalThis.js"></script>
        <script src="../Build/CesiumUnminified/Cesium.js"></script>
        <script src="../../viewerCesiumNavigationMixin.js"></script>
        <script src="./utils.js"></script>
        <script defer src="./viewshed-utils.js"></script>
        <link rel="stylesheet" href="./3d-analysis.css">
    </head>
    <body>
        <div id="cesiumContainer">
          <template id="viewshedButtonTemplate">
            <div class="cesium-button cesium-toolbar-button toggle-viewshed-button" title="שטח נצפה" data-bind="css: { toggled: isViewshedModeOn },click: toggleIsViewshedModeOn">
              <img src="./assets/viewshed.svg" alt="viewshed"/>
            </template>
          <div id="viewshedConfigPanel" data-bind="style: { display: isViewshedModeOn ? 'block' : 'none'  }, css: { open: !isPanelCollapsed, 'cesium-button cesium-toolbar-button': isPanelCollapsed }">
            <div id="panelTitle">
              <h2>שטח נצפה</h2>
              <div class="viewshedToolsContainer">
                <div data-bind="click: toggle360View, css: { toggled: is360View }" class="cesium-button cesium-toolbar-button">
                  <img class="toolButton" width="30" height="30" title="צפה ב-360°" src="./assets/360-degrees.png" alt="toggle_360_view"/>
                </div>
                <div data-bind="click: toggleFOVVolume, css: { toggled: showLateralSurfaces }" class="cesium-button cesium-toolbar-button">
                  <img class="toolButton" width="30" height="30" title="הצג אזור לחישוב" src="./assets/field-of-view.png" alt="toggle_show_fov_volume"/>
                </div>
              </div>
            </div>
            <p id="closePanel" data-bind="click: togglePanelCollapsed"><sup>⇱</sup><sub>⇲</sub></p>
            <div id="panel">
              <table id="viewshedConfigTable">
                <tbody>
                  <tr>
                    <td>הצמד גובה למודל</td>
                    <td id="customPerspectiveCell">
                      <input data-bind="checked: isAltitudeAttachedToTerrain" type="checkbox" name="attachHeightToModel" align="">
                      <span>לפי: </span>
                      <div class="viewshedToolsContainer customPerspectivesContainer" data-bind="foreach: perspectivePresets">
                        <div data-bind="click: onClick, css: { toggled: $parent.chosenPerspective && $parent.chosenPerspective.perspective === perspective , disabled: !$parent.isAltitudeAttachedToTerrain}" class="cesium-button cesium-toolbar-button">
                          <img class="toolButton" width="30" height="30" data-bind="attr: {src: icon, title: '+' + height + ' ' + `מ'`}"/>
                        </div>
                      </div>
                    </td>
                  </tr>
                  <tr>
                    <td>גובה לפי מודל (מ')</td>
                    <td id="altitudeSlider">
                      <input type="range" min="0.0" max="1000.0" step="0.1" data-bind="value:altitude, valueUpdate: 'input', disable: isAltitudeAttachedToTerrain" style="width: 150px">
                    </td>
                    <td>
                      <input type="number" size="5" step="1" data-bind="value: altitude, valueUpdate: 'input', disable: isAltitudeAttachedToTerrain" style="width: 80px">
                    </td>
                  </tr>
                   <tr>
                    <td>מרחק חישוב (מ')</td>
                    <td id="radiusSlider">
                      <input type="range" min="0.0" max="1000.0" step="100" data-bind="value:radius, valueUpdate: 'input'" style="width: 150px">
                    </td>
                    <td>
                      <input type="number" size="5" step="10" data-bind="value: radius, valueUpdate: 'input'" style="width: 80px">
                    </td>
                  </tr>
                  <tr>
                    <td>אזימוט°</td>
                    <td id="clockSlider">
                      <input type="range" min="0" max="360" step="1" data-bind="value:clock, valueUpdate: 'input'" style="width: 150px">
                    </td>
                    <td>
                      <input type="number" size="5" step="1" data-bind="value: clock, valueUpdate: 'input'" style="width: 80px">
                    </td>
                  </tr>
                  <tr>
                    <td>כיוון צפייה אנכי°</td>
                    <td id="coneSlider">
                      <input type="range" min="-90" max="90" step="1" data-bind="value:cone, valueUpdate: 'input'" style="width: 150px">
                    </td>
                    <td>
                      <input type="number" min="-90" max="90" size="5" step="1" data-bind="value: cone, valueUpdate: 'input'" style="width: 80px">
                    </td>
                  </tr>
                  <tr>
                    <td>
                      <p data-bind="click: toggleShowAdvancedFields" id="toggleAdvancedFields">
                        שימוש מתקדם 
                        <span data-bind="if: !showAdvancedFields">+</span>
                        <span data-bind="if: showAdvancedFields">-</span>
                      </p>
                    </td>
                  </tr>
                  <tr class="coordinatesRow" data-bind="if: showAdvancedFields">
                    <td>
                      נקודת אורך <input type="number" size="5" step="0.00001" data-bind="value: longitude, valueUpdate: 'input'" style="width: 80px">
                    </td>
      
                    <td>
                      נקודת רוחב <input type="number" size="5" step="0.00001" data-bind="value: latitude, valueUpdate: 'input'" style="width: 80px">
                    </td>
                  </tr>
                  <tr data-bind="if: showAdvancedFields">
                    <td>חצי זווית צפיה לאורך</td>
                    <td id="xHalfAngleSlider">
                      <input type="range" min="1.0" max="90.0" step="1" data-bind="value:xHalfAngle, valueUpdate: 'input', disable: is360View" style="width: 150px">
                    </td>
                    <td>
                      <input type="number" min="1.0" max="90.0" size="5" step="1" data-bind="value: xHalfAngle, valueUpdate: 'input', disable: is360View" style="width: 80px">
                    </td>
                  </tr>
                   <tr data-bind="if: showAdvancedFields">
                    <td>חצי זווית צפיה לרוחב</td>
                    <td id="yHalfAngleSlider">
                      <input type="range" min="1.0" max="90.0" step="1" data-bind="value:yHalfAngle, valueUpdate: 'input', disable: is360View" style="width: 150px">
                    </td>
                    <td>
                      <input type="number" min="1.0" max="90.0" size="5" step="1" data-bind="value: yHalfAngle, valueUpdate: 'input', disable: is360View" style="width: 80px">
                    </td>
                  </tr>
                  <!-- <tr>
                    <td>Twist</td>
                    <td id="twistSlider">
                      <input type="range" min="-3.14" max="3.14" step="0.01" data-bind="value:twist, valueUpdate: 'input'" style="width: 150px">
                    </td>
                    <td>
                      <input type="number" size="5" step="0.01" data-bind="value: twist, valueUpdate: 'input'" style="width: 80px">
                    </td>
                  </tr> -->
                  <!-- <tr>
                    <td>
                      <label for="portionMenu">Select portion to display</label>
                    </td>
                    <td colspan="2">
                      <select id="portionMenu" data-bind="options: portionOptions, value: selectedPortion"></select>
                    </td>
                  </tr> -->
                </tbody>
              </table>
              <!-- <table>
                <tbody>
                  <tr>
                    <td>Show Ellipsoid Horizon Surfaces</td>
                    <td id="ellipsoidHorizonCheckBox" colspan="2">
                      <input type="checkbox" data-bind="checked: showEllipsoidHorizonSurfaces">
                    </td>
                  </tr> 
                  <tr>
                    <td>Show Dome Surfaces</td>
                    <td id="domeCheckBox" colspan="2">
                      <input type="checkbox" data-bind="checked: showDomeSurfaces">
                    </td>
                  </tr>
                  <tr>
                    <td>Show Ellipsoid Surfaces</td>
                    <td id="ellipsoidCheckBox" colspan="2">
                      <input type="checkbox" data-bind="checked: showEllipsoidSurfaces">
                    </td>
                  </tr>
                </tbody>
              </table> -->
            </div>
        </div>
        <script>
            const MAXIMUM_SCREEN_SPACE_ERROR = 5;
            const CULL_REQUESTS_WHILE_MOVING_MULTIPLIER = 120;
            const searchParams = new URLSearchParams(window.location.search.substring(1));
            const queryModelUrl = searchParams.get("modelUrl");
           
            // ----- Viewer Config -----
            const viewer = new Cesium.Viewer("cesiumContainer", {
                imageryProvider: false,
                navigationHelpButton: false,
                geocoder: false,
                homeButton: true,
                infoBox: false,
                sceneModePicker: false,
                timeline: false,
                navigationInstructionsInitiallyVisible: false,
                scene3DOnly: true,
                baseLayerPicker: false,
            });
            viewer.extend(Cesium.viewerMeasureMixin, {
                units: new Cesium.MeasureUnits({
                    distanceUnits: Cesium.DistanceUnits.METERS,
                    areaUnits: Cesium.AreaUnits.SQUARE_METERS,
                    volumeUnits: Cesium.VolumeUnits.CUBIC_METERS
                })
            });

            viewer.extend(Cesium.viewerCesiumNavigationMixin, {
              enableZoomControls: false
            });

            function applyCesiumAssetsForDev() {
              viewer.terrainProvider = Cesium.Terrain.fromWorldTerrain();
              Cesium.Cesium3DTileset.fromIonAssetId(40866).then((tileset) => {
                viewer.scene.primitives.add(tileset);
                viewer.zoomTo(tileset);

                overrideHomeButtonHandler(viewer, () => {
                  viewer.zoomTo(tileset);
                });
              });
            }

            // Uncomment for development
            // applyCesiumAssetsForDev();
            
            const canvas = viewer.canvas;

            const handler = new Cesium.ScreenSpaceEventHandler(canvas);
            viewer.scene.globe.shadows = Cesium.ShadowMode.ENABLED;

            const cesiumToolbarContainer = document.querySelector('.cesium-viewer-toolbar');
            const viewshedToolButtonTemplate = document.getElementById('viewshedButtonTemplate');
            cesiumToolbarContainer.prepend(viewshedToolButtonTemplate.content.cloneNode(true));
            // ----- View Config -----

            let baseMapLayerWMTSOptions = null;
            if (searchParams.has("baseMapLayerEncoded")) {
                baseMapLayerWMTSOptions = JSON.parse(
                    window.atob(searchParams.get("baseMapLayerEncoded"))
                );
                baseMapLayerWMTSOptions.tilingScheme = new Cesium.GeographicTilingScheme();
            }
            if (searchParams.has("terrainProviderUrl")) {
                terrainProviderUrl = searchParams.get("terrainProviderUrl");
            }

            try {
                if (terrainProviderUrl) {
                    addTerrainProvider(viewer, terrainProviderUrl, {});
                }
                if (baseMapLayerWMTSOptions) {
                    addRasterLayer(viewer, { ...baseMapLayerWMTSOptions });
                }
                if (queryModelUrl) {
                    const modelAddedCallback = (tileset) => {
                      if(tileset) {
                        overrideHomeButtonHandler(viewer, () => {
                          viewer.zoomTo(tileset);
                        });
                      }
                    };

                    add3DModel(viewer, queryModelUrl, {
                        maximumScreenSpaceError: MAXIMUM_SCREEN_SPACE_ERROR,
                        cullRequestsWhileMovingMultiplier: CULL_REQUESTS_WHILE_MOVING_MULTIPLIER,
                        preloadFlightDestinations: true,
                        preferLeaves: true,
                        skipLevelOfDetail: true
                    }, true, modelAddedCallback);
                }
            } catch (e) {
                console.error(e);
            }
        </script>
    </body>
</html>
